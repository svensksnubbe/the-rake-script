-- the rake script gui by Sianrang98
-- written by AI
-- press T to close the gui
-- if you see warnings, stop using teleport for like 30 seconds


local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local workspace = game:GetService("Workspace")
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")

-- GUI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ScrapTPGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Main Frame (draggable container)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 250, 0, 160)
mainFrame.Position = UDim2.new(0.5, -125, 0.8, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 20
closeButton.Parent = mainFrame

-- Teleport Button
local teleportButton = Instance.new("TextButton")
teleportButton.Size = UDim2.new(0, 200, 0, 40)
teleportButton.Position = UDim2.new(0.5, -100, 0, 35)
teleportButton.Text = "Teleport to Closest Scrap"
teleportButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
teleportButton.TextColor3 = Color3.new(1, 1, 1)
teleportButton.Font = Enum.Font.SourceSansBold
teleportButton.TextSize = 20
teleportButton.Parent = mainFrame

-- Infinite Jump Button
local jumpButton = Instance.new("TextButton")
jumpButton.Size = UDim2.new(0, 200, 0, 40)
jumpButton.Position = UDim2.new(0.5, -100, 0, 90)
jumpButton.Text = "Toggle Infinite Jump"
jumpButton.BackgroundColor3 = Color3.fromRGB(0, 255, 100)
jumpButton.TextColor3 = Color3.new(1, 1, 1)
jumpButton.Font = Enum.Font.SourceSansBold
jumpButton.TextSize = 20
jumpButton.Parent = mainFrame

-- Sound Effect
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://3173566193" -- Replace with any teleport sound if you want
sound.Volume = 1
sound.Name = "TeleportSound"
sound.Parent = workspace

-- Reopen GUI with keybind (T)
uis.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.T then
		mainFrame.Visible = not mainFrame.Visible
	end
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
end)

-- Remove all previous highlights and distance GUI
local function clearHighlightsAndDistance()
	for _, h in ipairs(workspace:GetDescendants()) do
		if h:IsA("Highlight") and h.Name == "ScrapHighlight" then
			h:Destroy()
		elseif h:IsA("BillboardGui") and h.Name == "DistanceBillboard" then
			h:Destroy()
		end
	end
end

-- Add highlight to a part
local function addHighlight(part, color, depthMode)
	local highlight = Instance.new("Highlight")
	highlight.Name = "ScrapHighlight"
	highlight.Adornee = part
	highlight.FillColor = color
	highlight.FillTransparency = 0.7
	highlight.OutlineColor = color
	highlight.OutlineTransparency = 0.2
	highlight.DepthMode = depthMode or Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = part
end

-- Get nested Scrap parts
local function getAllScrapParts()
	local scraps = {}
	local scrapSpawns = workspace:WaitForChild("Filter"):WaitForChild("ScrapSpawns")

	for _, itemSpawn in ipairs(scrapSpawns:GetChildren()) do
		for _, scrapContainer in ipairs(itemSpawn:GetChildren()) do
			local scrapPart = scrapContainer:FindFirstChild("Scrap")
			if scrapPart and scrapPart:IsA("BasePart") then
				table.insert(scraps, scrapPart)
			end
		end
	end

	return scraps
end

-- Find closest scrap
local function getClosestScrap(scraps, playerPosition)
	local closestScrap = nil
	local shortestDistance = math.huge

	for _, scrap in ipairs(scraps) do
		local distance = (scrap.Position - playerPosition).Magnitude
		if distance < shortestDistance then
			shortestDistance = distance
			closestScrap = scrap
		end
	end

	return closestScrap, shortestDistance
end

-- Create distance BillboardGui on the closest scrap
local function createDistanceBillboard(scrap, distance)
	-- Clear any existing distance GUI first
	for _, gui in ipairs(scrap:GetChildren()) do
		if gui:IsA("BillboardGui") and gui.Name == "DistanceBillboard" then
			gui:Destroy()
		end
	end
	
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "DistanceBillboard"
	billboard.Adornee = scrap
	billboard.Size = UDim2.new(0, 100, 0, 40)
	billboard.StudsOffset = Vector3.new(0, 2.5, 0)
	billboard.AlwaysOnTop = true
	billboard.Parent = scrap
	
	local textLabel = Instance.new("TextLabel")
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.BackgroundTransparency = 0.5
	textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	textLabel.TextColor3 = Color3.new(1, 1, 0)
	textLabel.Font = Enum.Font.SourceSansBold
	textLabel.TextScaled = true
	textLabel.Text = string.format("%.1f studs", distance)
	textLabel.Parent = billboard
	
	return textLabel
end

-- Variables to track the BillboardGui and the closest scrap
local currentDistanceLabel = nil
local currentClosestScrap = nil

-- Update highlights and distance billboard live
local function updateHighlightsAndDistance()
	local scraps = getAllScrapParts()
	clearHighlightsAndDistance()

	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local closestScrap, distance = getClosestScrap(scraps, hrp.Position)

	-- Highlight all scraps and create the distance billboard on closest scrap
	for _, scrap in ipairs(scraps) do
		local color = (scrap == closestScrap) and Color3.fromRGB(255, 255, 0) or Color3.fromRGB(0, 170, 255)
		addHighlight(scrap, color)
	end
	
	if closestScrap then
		currentClosestScrap = closestScrap
		currentDistanceLabel = createDistanceBillboard(closestScrap, distance)
	else
		currentClosestScrap = nil
		currentDistanceLabel = nil
	end
end

-- Update the distance text every frame for smooth live tracking
runService.Heartbeat:Connect(function()
	if currentClosestScrap and currentDistanceLabel then
		local character = player.Character
		local hrp = character and character:FindFirstChild("HumanoidRootPart")
		if hrp then
			local distance = (currentClosestScrap.Position - hrp.Position).Magnitude
			currentDistanceLabel.Text = string.format("%.1f studs", distance)
		else
			currentDistanceLabel.Text = "N/A"
		end
	else
		-- If no closest scrap, nothing to update
	end
end)

-- Teleport logic
teleportButton.MouseButton1Click:Connect(function()
	local scraps = getAllScrapParts()
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end

	local closestScrap = getClosestScrap(scraps, hrp.Position)
	if closestScrap then
		hrp.CFrame = closestScrap.CFrame + Vector3.new(0, 5, 0)
		sound:Play()
	end
	
	updateHighlightsAndDistance()
end)

-- Infinite Jump toggle
local infiniteJumpEnabled = false

jumpButton.MouseButton1Click:Connect(function()
	infiniteJumpEnabled = not infiniteJumpEnabled
	jumpButton.Text = infiniteJumpEnabled and "Infinite Jump: ON" or "Infinite Jump: OFF"
end)

-- Jump loop
uis.JumpRequest:Connect(function()
	if infiniteJumpEnabled then
		local character = player.Character
		local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
		if humanoid then
			humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
end)

-- Initialize everything on script load
task.wait(1) -- wait for world to load
updateHighlightsAndDistance()
